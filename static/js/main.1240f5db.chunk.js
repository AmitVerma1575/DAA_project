(this["webpackJsonpmy-visualizer"]=this["webpackJsonpmy-visualizer"]||[]).push([[0],{14:function(e,t,n){},15:function(e,t,n){},16:function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),r=n(8),i=n.n(r),s=(n(14),n(15),n(6)),c=n(1),u=n(2),l=n(4),d=n(3),h=function(e){Object(l.a)(n,e);var t=Object(d.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(u.a)(n,[{key:"render",value:function(){var e=this.props,t=e.col,n=e.row,a=e.isFinish,r=e.isStart,i=e.isWall,s=e.onMouseDown,c=e.onMouseEnter,u=e.onMouseUp,l=a?"node-finish":r?"node-start":i?"node-wall":"";return o.a.createElement("div",{id:"node-".concat(n,"-").concat(t),className:"node ".concat(l),onMouseDown:function(){return s(n,t)},onMouseEnter:function(){return c(n,t)},onMouseUp:function(){return u()}})}}]),n}(a.Component),f=n(5);function m(e,t,n){var a=[];t.distance=0;for(var o=function(e){var t,n=[],a=Object(f.a)(e);try{for(a.s();!(t=a.n()).done;){var o,r=t.value,i=Object(f.a)(r);try{for(i.s();!(o=i.n()).done;){var s=o.value;n.push(s)}}catch(c){i.e(c)}finally{i.f()}}}catch(c){a.e(c)}finally{a.f()}return n}(e);o.length;){v(o);var r=o.shift();if(!r.isWall){if(r.distance===1/0)return a;if(r.isVisited=!0,a.push(r),r===n)return a;p(r,e)}}}function v(e){e.sort((function(e,t){return e.distance-t.distance}))}function p(e,t){var n,a=function(e,t){var n=[],a=e.col,o=e.row;return o>0&&n.push(t[o-1][a]),o<t.length-1&&n.push(t[o+1][a]),a>0&&n.push(t[o][a-1]),a<t[0].length-1&&n.push(t[o][a+1]),n.filter((function(e){return!e.isVisited}))}(e,t),o=Object(f.a)(a);try{for(o.s();!(n=o.n()).done;){var r=n.value;r.distance=e.distance+1,r.previousNode=e}}catch(i){o.e(i)}finally{o.f()}}var g=function(e){Object(l.a)(n,e);var t=Object(d.a)(n);function n(){var e;return Object(c.a)(this,n),(e=t.call(this)).state={grid:[],mouseIsPressed:!1},e}return Object(u.a)(n,[{key:"componentDidMount",value:function(){var e=y();this.setState({grid:e})}},{key:"handleMouseDown",value:function(e,t){var n=w(this.state.grid,e,t);this.setState({grid:n,mouseIsPressed:!0})}},{key:"handleMouseUp",value:function(){this.setState({mouseIsPressed:!1})}},{key:"handleMouseEnter",value:function(e,t){if(this.state.mouseIsPressed){var n=w(this.state.grid,e,t);this.setState({grid:n})}}},{key:"animateDijkstra",value:function(e,t){for(var n=this,a=function(a){if(a===e.length)return setTimeout((function(){n.animateShortestPath(t)}),10*a),{v:void 0};setTimeout((function(){var t=e[a];document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-visited"}),10*a)},o=0;o<=e.length;o++){var r=a(o);if("object"===typeof r)return r.v}}},{key:"animateShortestPath",value:function(e){for(var t=function(t){setTimeout((function(){var n=e[t];document.getElementById("node-".concat(n.row,"-").concat(n.col)).className="node node-shortest-path"}),50*t)},n=0;n<e.length;n++)t(n)}},{key:"visualizeDijkstra",value:function(){var e=this.state.grid,t=e[10][15],n=e[10][35],a=m(e,t,n),o=function(e){for(var t=[];null!==e;)t.unshift(e),e=e.previousNode;return t}(n);this.animateDijkstra(a,o)}},{key:"resetBoard",value:function(){var e=y();e.forEach((function(e){e.forEach((function(e){e.isStart?document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node node-start":e.isFinish?document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node node-finish":document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node"}))})),this.setState({grid:e})}},{key:"render",value:function(){var e=this,t=this.state,n=t.grid,a=t.mouseIsPressed;return o.a.createElement(o.a.Fragment,null,o.a.createElement("h5",null,"Click on a square and drag to place walls between the starting node ",o.a.createElement("span",{style:{color:"green"}},"(green)")," and the end node ",o.a.createElement("span",{style:{color:"red"}},"(red).")," "),o.a.createElement("h5",null,"Once all the walls are placed, click the button below to find the shortest path between start and finish using Dijkstra's Algorithm."),o.a.createElement("hr",null),o.a.createElement("div",{onClick:function(){return e.visualizeDijkstra()}},o.a.createElement("a",{className:"visualize-button"},"Visualize Dijkstra's Algorithm")),o.a.createElement("div",{onClick:function(){return e.resetBoard()}},o.a.createElement("a",{className:"reset-button"},"Reset")),o.a.createElement("div",{className:"grid"},n.map((function(t,n){return o.a.createElement("div",{key:n},t.map((function(t,n){var r=t.row,i=t.col,s=t.isFinish,c=t.isStart,u=t.isWall;return o.a.createElement(h,{key:n,col:i,row:r,isFinish:s,isStart:c,isWall:u,mouseIsPressed:a,onMouseDown:function(t,n){return e.handleMouseDown(t,n)},onMouseEnter:function(t,n){return e.handleMouseEnter(t,n)},onMouseUp:function(){return e.handleMouseUp()}})})))}))))}}]),n}(a.Component),y=function(){for(var e=[],t=0;t<20;t++){for(var n=[],a=0;a<50;a++)n.push(E(a,t));e.push(n)}return e},E=function(e,t){return{col:e,row:t,isStart:10===t&&15===e,isFinish:10===t&&35===e,distance:1/0,isVisited:!1,isWall:!1,previousNode:null}},w=function(e,t,n){var a=e.slice(),o=a[t][n],r=Object(s.a)(Object(s.a)({},o),{},{isWall:!o.isWall});return a[t][n]=r,a};var k=function(){return o.a.createElement("div",{className:"App"},o.a.createElement(g,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(k,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},9:function(e,t,n){e.exports=n(16)}},[[9,1,2]]]);
//# sourceMappingURL=main.1240f5db.chunk.js.map